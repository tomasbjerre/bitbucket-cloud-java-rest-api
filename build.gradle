plugins {
	id "se.bjurr.gradle.conventional-release" version "0.+"
	id "se.bjurr.gradle.java-convention" version "0.+"
	id "se.bjurr.gradle.update-versions" version "0.+"
	id "org.openapi.generator" version "7.14.0"
}

dependencies {
	api 'io.swagger:swagger-annotations:1.6.16'
	api 'jakarta.ws.rs:jakarta.ws.rs-api:4.0.0'
	api 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.19.1'
	api 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.19.1'
	api 'jakarta.validation:jakarta.validation-api:3.1.1'
	api 'jakarta.annotation:jakarta.annotation-api:3.0.0'
}

openApiGenerate {
	generatorName = "jaxrs-spec"
	skipOverwrite = false
	inputSpec = "$rootDir/openapi.yml".toString()
	validateSpec = false
	skipValidateSpec = true
	outputDir = "$rootDir".toString()
	apiPackage = "se.bjurr.bitbucketcloud.gen.api"
	modelPackage = "se.bjurr.bitbucketcloud.gen.model"
	configOptions = [
		interfaceOnly: "true",
		generatePom: "false",
		useJackson: "true",
		useJakartaEe: "true"
	]
}

compileJava.dependsOn 'openApiGenerate'

tasks.named("spotlessGroovyGradle") {
	dependsOn(tasks.named("openApiGenerate"))
}

tasks.named("spotlessJava") {
	dependsOn(tasks.named("openApiGenerate"))
}

tasks.named("spotlessJson") {
	dependsOn(tasks.named("openApiGenerate"))
}

tasks.named("sourcesJar") {
	dependsOn(tasks.named("openApiGenerate"))
}

tasks.named("javadocJar") {
	dependsOn(tasks.named("openApiGenerate"))
}